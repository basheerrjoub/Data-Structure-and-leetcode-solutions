{"id":799463245,"lang":"python","lang_name":"Python","time":"1 month, 3 weeks","timestamp":1663142212,"status":10,"status_display":"Accepted","runtime":"2341 ms","url":"/submissions/detail/799463245/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"84.7 MB","code":"# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution(object):\n    def isPalindrome(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: bool\n        \"\"\"\n        \n        node = head\n        strNumber = \"\"\n        while node != None:\n            strNumber += str(node.val)\n            node = node.next\n        length = len(strNumber)\n        if length == 1 or (length == 2 and strNumber[0] == strNumber[1]):\n            return True\n\n        even = False\n        if length % 2 == 0:\n            even = True\n\n        half = (len(strNumber) // 2) \n        \n        leftI = half -1\n        rightI = half +1\n        if even:\n            while strNumber[leftI] == strNumber[rightI - 1]  and leftI >=0 and rightI-1 < length:\n                if leftI == 0:\n                    return True\n                leftI -= 1\n                rightI +=1\n        if not even:\n            while strNumber[leftI] == strNumber[rightI]  and leftI >=0 and rightI < length:\n                if leftI == 0:\n                    return True\n                leftI -= 1\n                rightI +=1\n        return False\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"notes":"","topic_tags":[]}