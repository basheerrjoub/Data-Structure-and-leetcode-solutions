{"id":815950671,"lang":"python","lang_name":"Python","time":"1Â month","timestamp":1664994988,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/815950671/","is_pending":"Not Pending","title":"Maximum Nesting Depth of the Parentheses","memory":"13.5 MB","code":"class Solution(object):\n    def maxDepth(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        stack = []\n        depth = 0\n        for char in s:\n            if char == \"(\":\n                stack.append(\"(\")\n                depth = len(stack) if depth < len(stack) else depth\n            elif char == \")\":\n                stack = stack[1:]\n        return depth","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-nesting-depth-of-the-parentheses","has_notes":false,"notes":"","topic_tags":[]}