{"id":832110233,"lang":"python","lang_name":"Python","time":"1 week, 6 days","timestamp":1666968568,"status":10,"status_display":"Accepted","runtime":"111 ms","url":"/submissions/detail/832110233/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"14.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def evaluateTree(self, root):\n        \n        \n        \n        def do(root):\n            \n            if not root.left and not root.right:\n                return root\n            if root.left.val == 0 and root.right.val == 1:\n                if root.val == 2:\n                    return TreeNode(1)\n                else:\n                    return TreeNode(0)\n            elif root.left.val == 1 and root.right.val == 0:\n                if root.val == 2:\n                    return TreeNode(1)\n                else:\n                    return TreeNode(0)\n            elif root.left.val == 1 and root.right.val == 1:\n                return TreeNode(1)\n            elif root.left.val == 0 and root.right.val == 0:\n                return TreeNode(0)\n            \n            root.left = do(root.left)\n            root.right = do(root.right)\n            return do(root)\n        \n        return (do(root).val)\n            \n        \n            \n                ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"notes":"","topic_tags":[]}