{"id":802314967,"lang":"python","lang_name":"Python","time":"1 month, 3 weeks","timestamp":1663445483,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/802314967/","is_pending":"Not Pending","title":"Same Tree","memory":"13.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def isSameTree(self, p, q):\n        \"\"\"\n        :type p: TreeNode\n        :type q: TreeNode\n        :rtype: bool\n        \"\"\"\n        stack1 = []; stack1.append(p)\n        stack2 = []; stack2.append(q)\n        \n        while len(stack1) and len(stack2):\n            node1 = stack1.pop(0)\n            node2 = stack2.pop(0)\n            if (not node1 and  node2) or (node1 and  not node2):\n                return False \n            elif not node1 and not node2:\n                continue\n            elif node1.val != node2.val:\n                return False\n            stack1.append(node1.left)\n            stack1.append(node1.right)\n            stack2.append(node2.left)\n            stack2.append(node2.right)\n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"notes":"","topic_tags":[]}